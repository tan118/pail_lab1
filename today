section .text 
global _start ;must be declared for linker (ld) 
 
_start: 
 
mov eax,x ;number bytes to be summed  
mov ebx,0 ;EBX will store the sum 
mov ecx, 5 ;ECX will point to the current element to be summed 9  
top: add ebx, [eax] 
 
add eax,1 ;move pointer to next element 
;decrement counter 
loop top ;if counter not 0, then loop again 15  
done: 
 
add ebx, '0' 
mov [sum], ebx ;done, store result in "sum" 
 
display: 
 
mov edx,1 ;message length 
mov ecx, sum ;message to write 
mov ebx, 1 ;file descriptor (stdout) 
mov eax, 4 ;system call number (sys_write) 
int 0x80 ;call kernel 
 
mov eax, 1 ;system call number (sys_exit) 
int 0x80 ;call kernel 
 
section .data 
global x 
x: 
db 1 
db 2 
db 3 
db 1 
db 2 
 
sum: 
db 0 , 0xa
